// Code generated by ent, DO NOT EDIT.

package equipment

import (
	"vine-template-rpc/internal/emonitor/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldName, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldType, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldStatus, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldRemark, v))
}

// Lon applies equality check predicate on the "lon" field. It's identical to LonEQ.
func Lon(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldLon, v))
}

// Lat applies equality check predicate on the "lat" field. It's identical to LatEQ.
func Lat(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldLat, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldAddress, v))
}

// InstallTime applies equality check predicate on the "install_time" field. It's identical to InstallTimeEQ.
func InstallTime(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldInstallTime, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldName, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldType, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldStatus))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldStatus, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldRemark, v))
}

// LonEQ applies the EQ predicate on the "lon" field.
func LonEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldLon, v))
}

// LonNEQ applies the NEQ predicate on the "lon" field.
func LonNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldLon, v))
}

// LonIn applies the In predicate on the "lon" field.
func LonIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldLon, vs...))
}

// LonNotIn applies the NotIn predicate on the "lon" field.
func LonNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldLon, vs...))
}

// LonGT applies the GT predicate on the "lon" field.
func LonGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldLon, v))
}

// LonGTE applies the GTE predicate on the "lon" field.
func LonGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldLon, v))
}

// LonLT applies the LT predicate on the "lon" field.
func LonLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldLon, v))
}

// LonLTE applies the LTE predicate on the "lon" field.
func LonLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldLon, v))
}

// LonContains applies the Contains predicate on the "lon" field.
func LonContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldLon, v))
}

// LonHasPrefix applies the HasPrefix predicate on the "lon" field.
func LonHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldLon, v))
}

// LonHasSuffix applies the HasSuffix predicate on the "lon" field.
func LonHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldLon, v))
}

// LonIsNil applies the IsNil predicate on the "lon" field.
func LonIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldLon))
}

// LonNotNil applies the NotNil predicate on the "lon" field.
func LonNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldLon))
}

// LonEqualFold applies the EqualFold predicate on the "lon" field.
func LonEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldLon, v))
}

// LonContainsFold applies the ContainsFold predicate on the "lon" field.
func LonContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldLon, v))
}

// LatEQ applies the EQ predicate on the "lat" field.
func LatEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldLat, v))
}

// LatNEQ applies the NEQ predicate on the "lat" field.
func LatNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldLat, v))
}

// LatIn applies the In predicate on the "lat" field.
func LatIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldLat, vs...))
}

// LatNotIn applies the NotIn predicate on the "lat" field.
func LatNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldLat, vs...))
}

// LatGT applies the GT predicate on the "lat" field.
func LatGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldLat, v))
}

// LatGTE applies the GTE predicate on the "lat" field.
func LatGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldLat, v))
}

// LatLT applies the LT predicate on the "lat" field.
func LatLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldLat, v))
}

// LatLTE applies the LTE predicate on the "lat" field.
func LatLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldLat, v))
}

// LatContains applies the Contains predicate on the "lat" field.
func LatContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldLat, v))
}

// LatHasPrefix applies the HasPrefix predicate on the "lat" field.
func LatHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldLat, v))
}

// LatHasSuffix applies the HasSuffix predicate on the "lat" field.
func LatHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldLat, v))
}

// LatIsNil applies the IsNil predicate on the "lat" field.
func LatIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldLat))
}

// LatNotNil applies the NotNil predicate on the "lat" field.
func LatNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldLat))
}

// LatEqualFold applies the EqualFold predicate on the "lat" field.
func LatEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldLat, v))
}

// LatContainsFold applies the ContainsFold predicate on the "lat" field.
func LatContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldLat, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldAddress, v))
}

// InstallTimeEQ applies the EQ predicate on the "install_time" field.
func InstallTimeEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEQ(FieldInstallTime, v))
}

// InstallTimeNEQ applies the NEQ predicate on the "install_time" field.
func InstallTimeNEQ(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNEQ(FieldInstallTime, v))
}

// InstallTimeIn applies the In predicate on the "install_time" field.
func InstallTimeIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldIn(FieldInstallTime, vs...))
}

// InstallTimeNotIn applies the NotIn predicate on the "install_time" field.
func InstallTimeNotIn(vs ...string) predicate.Equipment {
	return predicate.Equipment(sql.FieldNotIn(FieldInstallTime, vs...))
}

// InstallTimeGT applies the GT predicate on the "install_time" field.
func InstallTimeGT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGT(FieldInstallTime, v))
}

// InstallTimeGTE applies the GTE predicate on the "install_time" field.
func InstallTimeGTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldGTE(FieldInstallTime, v))
}

// InstallTimeLT applies the LT predicate on the "install_time" field.
func InstallTimeLT(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLT(FieldInstallTime, v))
}

// InstallTimeLTE applies the LTE predicate on the "install_time" field.
func InstallTimeLTE(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldLTE(FieldInstallTime, v))
}

// InstallTimeContains applies the Contains predicate on the "install_time" field.
func InstallTimeContains(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContains(FieldInstallTime, v))
}

// InstallTimeHasPrefix applies the HasPrefix predicate on the "install_time" field.
func InstallTimeHasPrefix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasPrefix(FieldInstallTime, v))
}

// InstallTimeHasSuffix applies the HasSuffix predicate on the "install_time" field.
func InstallTimeHasSuffix(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldHasSuffix(FieldInstallTime, v))
}

// InstallTimeIsNil applies the IsNil predicate on the "install_time" field.
func InstallTimeIsNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldIsNull(FieldInstallTime))
}

// InstallTimeNotNil applies the NotNil predicate on the "install_time" field.
func InstallTimeNotNil() predicate.Equipment {
	return predicate.Equipment(sql.FieldNotNull(FieldInstallTime))
}

// InstallTimeEqualFold applies the EqualFold predicate on the "install_time" field.
func InstallTimeEqualFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldEqualFold(FieldInstallTime, v))
}

// InstallTimeContainsFold applies the ContainsFold predicate on the "install_time" field.
func InstallTimeContainsFold(v string) predicate.Equipment {
	return predicate.Equipment(sql.FieldContainsFold(FieldInstallTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Equipment) predicate.Equipment {
	return predicate.Equipment(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Equipment) predicate.Equipment {
	return predicate.Equipment(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Equipment) predicate.Equipment {
	return predicate.Equipment(sql.NotPredicates(p))
}
